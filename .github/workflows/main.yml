name: Deploy PHP Website to Server

on:
  push:
    branches:
      - main # Or your deployment branch

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Display Remote Path and User Info for Debugging
        run: |
          echo "Remote WWW Path from secret is: '${{ secrets.REMOTE_WWW_PATH }}'"
          echo "SSH User from secret is: '${{ secrets.SERVER_USERNAME }}'"
          echo "Attempting to list remote directory contents (as SSH user)..."
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} "ls -ld ${{ secrets.REMOTE_WWW_PATH }}; whoami; groups; ls -la ${{ secrets.REMOTE_WWW_PATH }}/.user.ini || echo '.user.ini not found or not accessible'" || echo "Failed to list remote directory or gather user info."

      - name: Deploy files via rsync
        run: |
          echo "Current local directory contents:"
          ls -la
          echo "---"
          echo "Executing rsync command..."
          set -x # Print the exact command being run

          # Using -rlpvz (removed -t to avoid 'failed to set times' error)
          # -r: recursive, -l: copy symlinks as symlinks, -p: preserve permissions (as much as possible)
          # -v: verbose, -z: compress
          rsync -rlvz --delete --no-super \
            --exclude '.git*' \
            --exclude '.github' \
            --exclude 'README.md' \
            --exclude '.vscode' \
            --exclude '.user.ini' \
            ./ ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }}:${{ secrets.REMOTE_WWW_PATH }}/

      - name: Set Final Permissions on Server
        if: always()
        run: |
          ssh ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} << EOF
            echo "Attempting to set final permissions on the server..."
            echo "Target directory: ${{ secrets.REMOTE_WWW_PATH }}"
            
            echo "Changing group ownership to 'www' for all items in ${{ secrets.REMOTE_WWW_PATH }}..."
            sudo chgrp -R www ${{ secrets.REMOTE_WWW_PATH }} || echo "WARNING: Failed to change group to 'www'. Sudo rights for chgrp might be missing for user ${{ secrets.SERVER_USERNAME }}."
            
            echo "Setting directory permissions to 775 (rwxrwxr-x) for 'www' group access..."
            find ${{ secrets.REMOTE_WWW_PATH }} -type d -exec sudo chmod 775 {} \; || echo "WARNING: Failed to chmod directories."
            
            echo "Setting file permissions to 664 (rw-rw-r--) for 'www' group access..."
            find ${{ secrets.REMOTE_WWW_PATH }} -type f -exec sudo chmod 664 {} \; || echo "WARNING: Failed to chmod files."
            
            if [ -d "${{ secrets.REMOTE_WWW_PATH }}/data" ]; then
              echo "Ensuring 'data' directory (${{ secrets.REMOTE_WWW_PATH }}/data) is group 'www' and writable (775)..."
              sudo chgrp -R www ${{ secrets.REMOTE_WWW_PATH }}/data || echo "WARNING: Failed to chgrp data directory."
              sudo chmod -R 775 ${{ secrets.REMOTE_WWW_PATH }}/data || echo "WARNING: Failed to chmod data directory."
            else
              echo "Notice: 'data' directory not found at ${{ secrets.REMOTE_WWW_PATH }}/data for specific permission check."
            fi
            
            echo "Final permissions script finished."
          EOF
          
    outputs:
      deployment_status: ${{ job.status }}
